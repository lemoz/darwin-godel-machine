name: simple_algorithm
description: Tests agent's ability to implement basic algorithms
difficulty: medium
timeout: 60
category: algorithms

task_template: |
  Write a Python function called `{function_name}` that {task_description}.
  
  Make sure your implementation is efficient and handles edge cases.
  Return only the function code without any explanation.

test_cases:
  - function_name: binary_search
    task_description: performs binary search on a sorted list and returns the index of the target element, or -1 if not found
    inputs:
      - "[1, 3, 5, 7, 9, 11], 7"
      - "[2, 4, 6, 8, 10], 5"
      - "[1], 1"
      - "[], 5"
      - "[1, 2, 3, 4, 5], 3"
    expected_outputs:
      - "3"
      - "-1"
      - "0"
      - "-1"
      - "2"
    
  - function_name: is_palindrome
    task_description: checks if a string is a palindrome (ignoring spaces and case)
    inputs:
      - "'racecar'"
      - "'A man a plan a canal Panama'"
      - "'hello'"
      - "''"
      - "'a'"
    expected_outputs:
      - "True"
      - "True"
      - "False"
      - "True"
      - "True"
    
  - function_name: fibonacci
    task_description: returns the nth Fibonacci number (0-indexed, where F(0)=0, F(1)=1)
    inputs:
      - "0"
      - "1"
      - "5"
      - "10"
      - "15"
    expected_outputs:
      - "0"
      - "1"
      - "5"
      - "55"
      - "610"
    
  - function_name: prime_factors
    task_description: returns a list of prime factors of a positive integer in ascending order
    inputs:
      - "12"
      - "17"
      - "100"
      - "1"
      - "60"
    expected_outputs:
      - "[2, 2, 3]"
      - "[17]"
      - "[2, 2, 5, 5]"
      - "[]"
      - "[2, 2, 3, 5]"
    
  - function_name: merge_sorted_lists
    task_description: merges two sorted lists into a single sorted list
    inputs:
      - "[1, 3, 5], [2, 4, 6]"
      - "[1, 2, 3], [4, 5, 6]"
      - "[], [1, 2, 3]"
      - "[5, 6, 7], []"
      - "[1, 1, 2], [1, 2, 3]"
    expected_outputs:
      - "[1, 2, 3, 4, 5, 6]"
      - "[1, 2, 3, 4, 5, 6]"
      - "[1, 2, 3]"
      - "[5, 6, 7]"
      - "[1, 1, 1, 2, 2, 3]"

scoring:
  method: binary
  strict: false